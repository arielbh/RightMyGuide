//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace RightMyGuide.DataAccess.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TVShow", Namespace="http://schemas.datacontract.org/2004/07/IMdbService")]
    public partial class TVShow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> ActorsField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> CountriesField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> DirectorsField;
        
        private System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> EpisodesField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> GenresField;
        
        private string IdField;
        
        private string ImdbUrlField;
        
        private string PlotField;
        
        private string PosterUrlField;
        
        private float RatingField;
        
        private int RatingCountField;
        
        private int ReleaseYearField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Actors {
            get {
                return this.ActorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActorsField, value) != true)) {
                    this.ActorsField = value;
                    this.RaisePropertyChanged("Actors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Directors {
            get {
                return this.DirectorsField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorsField, value) != true)) {
                    this.DirectorsField = value;
                    this.RaisePropertyChanged("Directors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> Episodes {
            get {
                return this.EpisodesField;
            }
            set {
                if ((object.ReferenceEquals(this.EpisodesField, value) != true)) {
                    this.EpisodesField = value;
                    this.RaisePropertyChanged("Episodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImdbUrl {
            get {
                return this.ImdbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImdbUrlField, value) != true)) {
                    this.ImdbUrlField = value;
                    this.RaisePropertyChanged("ImdbUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plot {
            get {
                return this.PlotField;
            }
            set {
                if ((object.ReferenceEquals(this.PlotField, value) != true)) {
                    this.PlotField = value;
                    this.RaisePropertyChanged("Plot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PosterUrl {
            get {
                return this.PosterUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterUrlField, value) != true)) {
                    this.PosterUrlField = value;
                    this.RaisePropertyChanged("PosterUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingCount {
            get {
                return this.RatingCountField;
            }
            set {
                if ((this.RatingCountField.Equals(value) != true)) {
                    this.RatingCountField = value;
                    this.RaisePropertyChanged("RatingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReleaseYear {
            get {
                return this.ReleaseYearField;
            }
            set {
                if ((this.ReleaseYearField.Equals(value) != true)) {
                    this.ReleaseYearField = value;
                    this.RaisePropertyChanged("ReleaseYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Episode", Namespace="http://schemas.datacontract.org/2004/07/IMdbService")]
    public partial class Episode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private int NumberField;
        
        private int SeasonField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Season {
            get {
                return this.SeasonField;
            }
            set {
                if ((this.SeasonField.Equals(value) != true)) {
                    this.SeasonField = value;
                    this.RaisePropertyChanged("Season");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TVShowReviews", Namespace="http://schemas.datacontract.org/2004/07/IMdbService")]
    public partial class TVShowReviews : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Review> ReviewsField;
        
        private RightMyGuide.DataAccess.ServiceReference.TVShow ShowField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Review> Reviews {
            get {
                return this.ReviewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewsField, value) != true)) {
                    this.ReviewsField = value;
                    this.RaisePropertyChanged("Reviews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RightMyGuide.DataAccess.ServiceReference.TVShow Show {
            get {
                return this.ShowField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowField, value) != true)) {
                    this.ShowField = value;
                    this.RaisePropertyChanged("Show");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Review", Namespace="http://schemas.datacontract.org/2004/07/IMdbService")]
    public partial class Review : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RatingField;
        
        private string TextField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IIMdbService")]
    public interface IIMdbService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/SearchShowByTitle", ReplyAction="http://tempuri.org/IIMdbService/SearchShowByTitleResponse")]
        System.IAsyncResult BeginSearchShowByTitle(string title, int results, int offset, bool includeEpisodes, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> EndSearchShowByTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/GetShowById", ReplyAction="http://tempuri.org/IIMdbService/GetShowByIdResponse")]
        System.IAsyncResult BeginGetShowById(string id, bool includeEpisodes, bool includeFutureEpisodes, System.AsyncCallback callback, object asyncState);
        
        RightMyGuide.DataAccess.ServiceReference.TVShow EndGetShowById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/GetShowsByIds", ReplyAction="http://tempuri.org/IIMdbService/GetShowsByIdsResponse")]
        System.IAsyncResult BeginGetShowsByIds(System.Collections.ObjectModel.ObservableCollection<string> ids, bool includeEpisodes, bool includeFutureEpisodes, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> EndGetShowsByIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/AddReview", ReplyAction="http://tempuri.org/IIMdbService/AddReviewResponse")]
        System.IAsyncResult BeginAddReview(string id, int rating, string username, string text, System.AsyncCallback callback, object asyncState);
        
        void EndAddReview(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/GetReviews", ReplyAction="http://tempuri.org/IIMdbService/GetReviewsResponse")]
        System.IAsyncResult BeginGetReviews(string id, System.AsyncCallback callback, object asyncState);
        
        RightMyGuide.DataAccess.ServiceReference.TVShowReviews EndGetReviews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/ClearReviews", ReplyAction="http://tempuri.org/IIMdbService/ClearReviewsResponse")]
        System.IAsyncResult BeginClearReviews(string id, System.AsyncCallback callback, object asyncState);
        
        void EndClearReviews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIMdbService/GetFutureEpisodes", ReplyAction="http://tempuri.org/IIMdbService/GetFutureEpisodesResponse")]
        System.IAsyncResult BeginGetFutureEpisodes(string id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> EndGetFutureEpisodes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIMdbServiceChannel : RightMyGuide.DataAccess.ServiceReference.IIMdbService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchShowByTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchShowByTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShowByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShowByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RightMyGuide.DataAccess.ServiceReference.TVShow Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RightMyGuide.DataAccess.ServiceReference.TVShow)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShowsByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShowsByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReviewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReviewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RightMyGuide.DataAccess.ServiceReference.TVShowReviews Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RightMyGuide.DataAccess.ServiceReference.TVShowReviews)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFutureEpisodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFutureEpisodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IMdbServiceClient : System.ServiceModel.ClientBase<RightMyGuide.DataAccess.ServiceReference.IIMdbService>, RightMyGuide.DataAccess.ServiceReference.IIMdbService {
        
        private BeginOperationDelegate onBeginSearchShowByTitleDelegate;
        
        private EndOperationDelegate onEndSearchShowByTitleDelegate;
        
        private System.Threading.SendOrPostCallback onSearchShowByTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShowByIdDelegate;
        
        private EndOperationDelegate onEndGetShowByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetShowByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShowsByIdsDelegate;
        
        private EndOperationDelegate onEndGetShowsByIdsDelegate;
        
        private System.Threading.SendOrPostCallback onGetShowsByIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddReviewDelegate;
        
        private EndOperationDelegate onEndAddReviewDelegate;
        
        private System.Threading.SendOrPostCallback onAddReviewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReviewsDelegate;
        
        private EndOperationDelegate onEndGetReviewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReviewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearReviewsDelegate;
        
        private EndOperationDelegate onEndClearReviewsDelegate;
        
        private System.Threading.SendOrPostCallback onClearReviewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFutureEpisodesDelegate;
        
        private EndOperationDelegate onEndGetFutureEpisodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetFutureEpisodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public IMdbServiceClient() {
        }
        
        public IMdbServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IMdbServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IMdbServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IMdbServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SearchShowByTitleCompletedEventArgs> SearchShowByTitleCompleted;
        
        public event System.EventHandler<GetShowByIdCompletedEventArgs> GetShowByIdCompleted;
        
        public event System.EventHandler<GetShowsByIdsCompletedEventArgs> GetShowsByIdsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddReviewCompleted;
        
        public event System.EventHandler<GetReviewsCompletedEventArgs> GetReviewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearReviewsCompleted;
        
        public event System.EventHandler<GetFutureEpisodesCompletedEventArgs> GetFutureEpisodesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginSearchShowByTitle(string title, int results, int offset, bool includeEpisodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchShowByTitle(title, results, offset, includeEpisodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndSearchShowByTitle(System.IAsyncResult result) {
            return base.Channel.EndSearchShowByTitle(result);
        }
        
        private System.IAsyncResult OnBeginSearchShowByTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string title = ((string)(inValues[0]));
            int results = ((int)(inValues[1]));
            int offset = ((int)(inValues[2]));
            bool includeEpisodes = ((bool)(inValues[3]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginSearchShowByTitle(title, results, offset, includeEpisodes, callback, asyncState);
        }
        
        private object[] OnEndSearchShowByTitle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> retVal = ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndSearchShowByTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchShowByTitleCompleted(object state) {
            if ((this.SearchShowByTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchShowByTitleCompleted(this, new SearchShowByTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchShowByTitleAsync(string title, int results, int offset, bool includeEpisodes) {
            this.SearchShowByTitleAsync(title, results, offset, includeEpisodes, null);
        }
        
        public void SearchShowByTitleAsync(string title, int results, int offset, bool includeEpisodes, object userState) {
            if ((this.onBeginSearchShowByTitleDelegate == null)) {
                this.onBeginSearchShowByTitleDelegate = new BeginOperationDelegate(this.OnBeginSearchShowByTitle);
            }
            if ((this.onEndSearchShowByTitleDelegate == null)) {
                this.onEndSearchShowByTitleDelegate = new EndOperationDelegate(this.OnEndSearchShowByTitle);
            }
            if ((this.onSearchShowByTitleCompletedDelegate == null)) {
                this.onSearchShowByTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchShowByTitleCompleted);
            }
            base.InvokeAsync(this.onBeginSearchShowByTitleDelegate, new object[] {
                        title,
                        results,
                        offset,
                        includeEpisodes}, this.onEndSearchShowByTitleDelegate, this.onSearchShowByTitleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginGetShowById(string id, bool includeEpisodes, bool includeFutureEpisodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShowById(id, includeEpisodes, includeFutureEpisodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RightMyGuide.DataAccess.ServiceReference.TVShow RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndGetShowById(System.IAsyncResult result) {
            return base.Channel.EndGetShowById(result);
        }
        
        private System.IAsyncResult OnBeginGetShowById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            bool includeEpisodes = ((bool)(inValues[1]));
            bool includeFutureEpisodes = ((bool)(inValues[2]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginGetShowById(id, includeEpisodes, includeFutureEpisodes, callback, asyncState);
        }
        
        private object[] OnEndGetShowById(System.IAsyncResult result) {
            RightMyGuide.DataAccess.ServiceReference.TVShow retVal = ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndGetShowById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShowByIdCompleted(object state) {
            if ((this.GetShowByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShowByIdCompleted(this, new GetShowByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShowByIdAsync(string id, bool includeEpisodes, bool includeFutureEpisodes) {
            this.GetShowByIdAsync(id, includeEpisodes, includeFutureEpisodes, null);
        }
        
        public void GetShowByIdAsync(string id, bool includeEpisodes, bool includeFutureEpisodes, object userState) {
            if ((this.onBeginGetShowByIdDelegate == null)) {
                this.onBeginGetShowByIdDelegate = new BeginOperationDelegate(this.OnBeginGetShowById);
            }
            if ((this.onEndGetShowByIdDelegate == null)) {
                this.onEndGetShowByIdDelegate = new EndOperationDelegate(this.OnEndGetShowById);
            }
            if ((this.onGetShowByIdCompletedDelegate == null)) {
                this.onGetShowByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShowByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetShowByIdDelegate, new object[] {
                        id,
                        includeEpisodes,
                        includeFutureEpisodes}, this.onEndGetShowByIdDelegate, this.onGetShowByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginGetShowsByIds(System.Collections.ObjectModel.ObservableCollection<string> ids, bool includeEpisodes, bool includeFutureEpisodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShowsByIds(ids, includeEpisodes, includeFutureEpisodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndGetShowsByIds(System.IAsyncResult result) {
            return base.Channel.EndGetShowsByIds(result);
        }
        
        private System.IAsyncResult OnBeginGetShowsByIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> ids = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            bool includeEpisodes = ((bool)(inValues[1]));
            bool includeFutureEpisodes = ((bool)(inValues[2]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginGetShowsByIds(ids, includeEpisodes, includeFutureEpisodes, callback, asyncState);
        }
        
        private object[] OnEndGetShowsByIds(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> retVal = ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndGetShowsByIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShowsByIdsCompleted(object state) {
            if ((this.GetShowsByIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShowsByIdsCompleted(this, new GetShowsByIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShowsByIdsAsync(System.Collections.ObjectModel.ObservableCollection<string> ids, bool includeEpisodes, bool includeFutureEpisodes) {
            this.GetShowsByIdsAsync(ids, includeEpisodes, includeFutureEpisodes, null);
        }
        
        public void GetShowsByIdsAsync(System.Collections.ObjectModel.ObservableCollection<string> ids, bool includeEpisodes, bool includeFutureEpisodes, object userState) {
            if ((this.onBeginGetShowsByIdsDelegate == null)) {
                this.onBeginGetShowsByIdsDelegate = new BeginOperationDelegate(this.OnBeginGetShowsByIds);
            }
            if ((this.onEndGetShowsByIdsDelegate == null)) {
                this.onEndGetShowsByIdsDelegate = new EndOperationDelegate(this.OnEndGetShowsByIds);
            }
            if ((this.onGetShowsByIdsCompletedDelegate == null)) {
                this.onGetShowsByIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShowsByIdsCompleted);
            }
            base.InvokeAsync(this.onBeginGetShowsByIdsDelegate, new object[] {
                        ids,
                        includeEpisodes,
                        includeFutureEpisodes}, this.onEndGetShowsByIdsDelegate, this.onGetShowsByIdsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginAddReview(string id, int rating, string username, string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddReview(id, rating, username, text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndAddReview(System.IAsyncResult result) {
            base.Channel.EndAddReview(result);
        }
        
        private System.IAsyncResult OnBeginAddReview(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            int rating = ((int)(inValues[1]));
            string username = ((string)(inValues[2]));
            string text = ((string)(inValues[3]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginAddReview(id, rating, username, text, callback, asyncState);
        }
        
        private object[] OnEndAddReview(System.IAsyncResult result) {
            ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndAddReview(result);
            return null;
        }
        
        private void OnAddReviewCompleted(object state) {
            if ((this.AddReviewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddReviewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddReviewAsync(string id, int rating, string username, string text) {
            this.AddReviewAsync(id, rating, username, text, null);
        }
        
        public void AddReviewAsync(string id, int rating, string username, string text, object userState) {
            if ((this.onBeginAddReviewDelegate == null)) {
                this.onBeginAddReviewDelegate = new BeginOperationDelegate(this.OnBeginAddReview);
            }
            if ((this.onEndAddReviewDelegate == null)) {
                this.onEndAddReviewDelegate = new EndOperationDelegate(this.OnEndAddReview);
            }
            if ((this.onAddReviewCompletedDelegate == null)) {
                this.onAddReviewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddReviewCompleted);
            }
            base.InvokeAsync(this.onBeginAddReviewDelegate, new object[] {
                        id,
                        rating,
                        username,
                        text}, this.onEndAddReviewDelegate, this.onAddReviewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginGetReviews(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReviews(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RightMyGuide.DataAccess.ServiceReference.TVShowReviews RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndGetReviews(System.IAsyncResult result) {
            return base.Channel.EndGetReviews(result);
        }
        
        private System.IAsyncResult OnBeginGetReviews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginGetReviews(id, callback, asyncState);
        }
        
        private object[] OnEndGetReviews(System.IAsyncResult result) {
            RightMyGuide.DataAccess.ServiceReference.TVShowReviews retVal = ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndGetReviews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReviewsCompleted(object state) {
            if ((this.GetReviewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReviewsCompleted(this, new GetReviewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReviewsAsync(string id) {
            this.GetReviewsAsync(id, null);
        }
        
        public void GetReviewsAsync(string id, object userState) {
            if ((this.onBeginGetReviewsDelegate == null)) {
                this.onBeginGetReviewsDelegate = new BeginOperationDelegate(this.OnBeginGetReviews);
            }
            if ((this.onEndGetReviewsDelegate == null)) {
                this.onEndGetReviewsDelegate = new EndOperationDelegate(this.OnEndGetReviews);
            }
            if ((this.onGetReviewsCompletedDelegate == null)) {
                this.onGetReviewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReviewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReviewsDelegate, new object[] {
                        id}, this.onEndGetReviewsDelegate, this.onGetReviewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginClearReviews(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearReviews(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndClearReviews(System.IAsyncResult result) {
            base.Channel.EndClearReviews(result);
        }
        
        private System.IAsyncResult OnBeginClearReviews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginClearReviews(id, callback, asyncState);
        }
        
        private object[] OnEndClearReviews(System.IAsyncResult result) {
            ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndClearReviews(result);
            return null;
        }
        
        private void OnClearReviewsCompleted(object state) {
            if ((this.ClearReviewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearReviewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearReviewsAsync(string id) {
            this.ClearReviewsAsync(id, null);
        }
        
        public void ClearReviewsAsync(string id, object userState) {
            if ((this.onBeginClearReviewsDelegate == null)) {
                this.onBeginClearReviewsDelegate = new BeginOperationDelegate(this.OnBeginClearReviews);
            }
            if ((this.onEndClearReviewsDelegate == null)) {
                this.onEndClearReviewsDelegate = new EndOperationDelegate(this.OnEndClearReviews);
            }
            if ((this.onClearReviewsCompletedDelegate == null)) {
                this.onClearReviewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearReviewsCompleted);
            }
            base.InvokeAsync(this.onBeginClearReviewsDelegate, new object[] {
                        id}, this.onEndClearReviewsDelegate, this.onClearReviewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RightMyGuide.DataAccess.ServiceReference.IIMdbService.BeginGetFutureEpisodes(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFutureEpisodes(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> RightMyGuide.DataAccess.ServiceReference.IIMdbService.EndGetFutureEpisodes(System.IAsyncResult result) {
            return base.Channel.EndGetFutureEpisodes(result);
        }
        
        private System.IAsyncResult OnBeginGetFutureEpisodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).BeginGetFutureEpisodes(id, callback, asyncState);
        }
        
        private object[] OnEndGetFutureEpisodes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> retVal = ((RightMyGuide.DataAccess.ServiceReference.IIMdbService)(this)).EndGetFutureEpisodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFutureEpisodesCompleted(object state) {
            if ((this.GetFutureEpisodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFutureEpisodesCompleted(this, new GetFutureEpisodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFutureEpisodesAsync(string id) {
            this.GetFutureEpisodesAsync(id, null);
        }
        
        public void GetFutureEpisodesAsync(string id, object userState) {
            if ((this.onBeginGetFutureEpisodesDelegate == null)) {
                this.onBeginGetFutureEpisodesDelegate = new BeginOperationDelegate(this.OnBeginGetFutureEpisodes);
            }
            if ((this.onEndGetFutureEpisodesDelegate == null)) {
                this.onEndGetFutureEpisodesDelegate = new EndOperationDelegate(this.OnEndGetFutureEpisodes);
            }
            if ((this.onGetFutureEpisodesCompletedDelegate == null)) {
                this.onGetFutureEpisodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFutureEpisodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetFutureEpisodesDelegate, new object[] {
                        id}, this.onEndGetFutureEpisodesDelegate, this.onGetFutureEpisodesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override RightMyGuide.DataAccess.ServiceReference.IIMdbService CreateChannel() {
            return new IMdbServiceClientChannel(this);
        }
        
        private class IMdbServiceClientChannel : ChannelBase<RightMyGuide.DataAccess.ServiceReference.IIMdbService>, RightMyGuide.DataAccess.ServiceReference.IIMdbService {
            
            public IMdbServiceClientChannel(System.ServiceModel.ClientBase<RightMyGuide.DataAccess.ServiceReference.IIMdbService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSearchShowByTitle(string title, int results, int offset, bool includeEpisodes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = title;
                _args[1] = results;
                _args[2] = offset;
                _args[3] = includeEpisodes;
                System.IAsyncResult _result = base.BeginInvoke("SearchShowByTitle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> EndSearchShowByTitle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> _result = ((System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow>)(base.EndInvoke("SearchShowByTitle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShowById(string id, bool includeEpisodes, bool includeFutureEpisodes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = id;
                _args[1] = includeEpisodes;
                _args[2] = includeFutureEpisodes;
                System.IAsyncResult _result = base.BeginInvoke("GetShowById", _args, callback, asyncState);
                return _result;
            }
            
            public RightMyGuide.DataAccess.ServiceReference.TVShow EndGetShowById(System.IAsyncResult result) {
                object[] _args = new object[0];
                RightMyGuide.DataAccess.ServiceReference.TVShow _result = ((RightMyGuide.DataAccess.ServiceReference.TVShow)(base.EndInvoke("GetShowById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShowsByIds(System.Collections.ObjectModel.ObservableCollection<string> ids, bool includeEpisodes, bool includeFutureEpisodes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ids;
                _args[1] = includeEpisodes;
                _args[2] = includeFutureEpisodes;
                System.IAsyncResult _result = base.BeginInvoke("GetShowsByIds", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> EndGetShowsByIds(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow> _result = ((System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.TVShow>)(base.EndInvoke("GetShowsByIds", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddReview(string id, int rating, string username, string text, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = id;
                _args[1] = rating;
                _args[2] = username;
                _args[3] = text;
                System.IAsyncResult _result = base.BeginInvoke("AddReview", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddReview(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddReview", _args, result);
            }
            
            public System.IAsyncResult BeginGetReviews(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetReviews", _args, callback, asyncState);
                return _result;
            }
            
            public RightMyGuide.DataAccess.ServiceReference.TVShowReviews EndGetReviews(System.IAsyncResult result) {
                object[] _args = new object[0];
                RightMyGuide.DataAccess.ServiceReference.TVShowReviews _result = ((RightMyGuide.DataAccess.ServiceReference.TVShowReviews)(base.EndInvoke("GetReviews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearReviews(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("ClearReviews", _args, callback, asyncState);
                return _result;
            }
            
            public void EndClearReviews(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ClearReviews", _args, result);
            }
            
            public System.IAsyncResult BeginGetFutureEpisodes(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetFutureEpisodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> EndGetFutureEpisodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode> _result = ((System.Collections.ObjectModel.ObservableCollection<RightMyGuide.DataAccess.ServiceReference.Episode>)(base.EndInvoke("GetFutureEpisodes", _args, result)));
                return _result;
            }
        }
    }
}
